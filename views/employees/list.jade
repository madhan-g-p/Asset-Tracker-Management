extends ../layout

block content
  h2 Employees
  .filters.mb-3
    input#search.form-control.d-inline-block.w-auto(type="text", placeholder="Search", style="width:240px;")
    select#status.form-control.d-inline-block.w-auto(aria-label="Status", style="width:140px; margin-left:8px;")
      option(value="") All
      option(value="active") Active
      option(value="inactive") Inactive
    a.btn.btn-primary.ml-3(href="/employees/new") + Add Employee
  #employeeError.mt-2
  table#employeeTable.table.table-striped
    thead
      tr
        th Name
        th Email
        th Branch
        th Status
        th Actions
    tbody

  script(src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js")
  script.
    let employeeTable;

    function showError(msg) {
      $('#employeeError').html(`<div class="alert alert-danger">${msg}</div>`);
    }
    function clearError() {
      $('#employeeError').empty();
    }
    function getStatusValue() {
      const val = $('#status').val();
      if(val === 'active') return true;
      if(val === 'inactive') return false;
      return '';
    }
    function reloadTable() {
      clearError();
      employeeTable.ajax.reload(null, true);
    }
    function deleteEmployee(id) {
      if (!confirm('Delete this employee?')) return;
      clearError();
      $.ajax({
        url: `/employees/api/${id}`,
        method: 'DELETE',
        success: reloadTable,
        error: function(xhr) {
          showError(xhr.responseJSON?.error || 'Failed to delete employee');
        }
      });
    }

    $(document).ready(function() {
      employeeTable = $('#employeeTable').DataTable({
        processing: true,
        serverSide: true,
        searching: false,
        pageLength: 10,
        ajax: function(data, callback, settings) {
          clearError();
          const page = Math.floor(data.start / data.length) + 1;
          const search = $('#search').val().trim();
          const status = getStatusValue();

          $.ajax({
            url: '/employees/api',
            data: { search, status, page, limit: data.length },
            success: function(res) {
              callback({
                data: res.employees.map(emp => [
                  emp.name,
                  emp.email,
                  emp.branch,
                  emp.isActive ? "Active" : "Inactive",
                  `<a href="/employees/${emp.id}/edit" class="btn btn-sm btn-info">Edit</a>
                   <button class="btn btn-sm btn-danger" onclick="deleteEmployee(${emp.id})">Delete</button>`
                ]),
                recordsTotal: res.totalCount || 0,
                recordsFiltered: res.totalCount || 0
              });
            },
            error: function(xhr) {
              showError(xhr.responseJSON?.error || 'Failed to fetch employees');
              callback({ data: [], recordsTotal: 0, recordsFiltered: 0 });
            }
          });
        }
      });

      $('#search').on('input', reloadTable);
      $('#status').change(reloadTable);
    });